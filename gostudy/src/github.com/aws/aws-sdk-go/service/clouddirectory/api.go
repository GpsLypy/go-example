// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package clouddirectory

import (
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/awsutil"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/private/protocol"
	"github.com/aws/aws-sdk-go/private/protocol/restjson"
)

const opAddFacetToObject = "AddFacetToObject"

// AddFacetToObjectRequest generates a "aws/request.Request" representing the
// client's request for the AddFacetToObject operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AddFacetToObject for more information on using the AddFacetToObject
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AddFacetToObjectRequest method.
//    req, resp := client.AddFacetToObjectRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AddFacetToObject
func (c *CloudDirectory) AddFacetToObjectRequest(input *AddFacetToObjectInput) (req *request.Request, output *AddFacetToObjectOutput) {
	op := &request.Operation{
		Name:       opAddFacetToObject,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/facets",
	}

	if input == nil {
		input = &AddFacetToObjectInput{}
	}

	output = &AddFacetToObjectOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// AddFacetToObject API operation for Amazon CloudDirectory.
//
// Adds a new Facet to an object. An object can have more than one facet applied
// on it.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation AddFacetToObject for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AddFacetToObject
func (c *CloudDirectory) AddFacetToObject(input *AddFacetToObjectInput) (*AddFacetToObjectOutput, error) {
	req, out := c.AddFacetToObjectRequest(input)
	return out, req.Send()
}

// AddFacetToObjectWithContext is the same as AddFacetToObject with the addition of
// the ability to pass a context and additional request options.
//
// See AddFacetToObject for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) AddFacetToObjectWithContext(ctx aws.Context, input *AddFacetToObjectInput, opts ...request.Option) (*AddFacetToObjectOutput, error) {
	req, out := c.AddFacetToObjectRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opApplySchema = "ApplySchema"

// ApplySchemaRequest generates a "aws/request.Request" representing the
// client's request for the ApplySchema operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ApplySchema for more information on using the ApplySchema
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ApplySchemaRequest method.
//    req, resp := client.ApplySchemaRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ApplySchema
func (c *CloudDirectory) ApplySchemaRequest(input *ApplySchemaInput) (req *request.Request, output *ApplySchemaOutput) {
	op := &request.Operation{
		Name:       opApplySchema,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/schema/apply",
	}

	if input == nil {
		input = &ApplySchemaInput{}
	}

	output = &ApplySchemaOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ApplySchema API operation for Amazon CloudDirectory.
//
// Copies the input published schema, at the specified version, into the Directory
// with the same name and version as that of the published schema.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ApplySchema for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeSchemaAlreadyExistsException "SchemaAlreadyExistsException"
//   Indicates that a schema could not be created due to a naming conflict. Please
//   select a different name and then try again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidAttachmentException "InvalidAttachmentException"
//   Indicates that an attempt to make an attachment was invalid. For example,
//   attaching two nodes with a link type that is not applicable to the nodes
//   or attempting to apply a schema to a directory a second time.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ApplySchema
func (c *CloudDirectory) ApplySchema(input *ApplySchemaInput) (*ApplySchemaOutput, error) {
	req, out := c.ApplySchemaRequest(input)
	return out, req.Send()
}

// ApplySchemaWithContext is the same as ApplySchema with the addition of
// the ability to pass a context and additional request options.
//
// See ApplySchema for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ApplySchemaWithContext(ctx aws.Context, input *ApplySchemaInput, opts ...request.Option) (*ApplySchemaOutput, error) {
	req, out := c.ApplySchemaRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachObject = "AttachObject"

// AttachObjectRequest generates a "aws/request.Request" representing the
// client's request for the AttachObject operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachObject for more information on using the AttachObject
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachObjectRequest method.
//    req, resp := client.AttachObjectRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AttachObject
func (c *CloudDirectory) AttachObjectRequest(input *AttachObjectInput) (req *request.Request, output *AttachObjectOutput) {
	op := &request.Operation{
		Name:       opAttachObject,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/attach",
	}

	if input == nil {
		input = &AttachObjectInput{}
	}

	output = &AttachObjectOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AttachObject API operation for Amazon CloudDirectory.
//
// Attaches an existing object to another object. An object can be accessed
// in two ways:
//
// Using the path
//
// Using ObjectIdentifier
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation AttachObject for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeLinkNameAlreadyInUseException "LinkNameAlreadyInUseException"
//   Indicates that a link could not be created due to a naming conflict. Choose
//   a different name and then try again.
//
//   * ErrCodeInvalidAttachmentException "InvalidAttachmentException"
//   Indicates that an attempt to make an attachment was invalid. For example,
//   attaching two nodes with a link type that is not applicable to the nodes
//   or attempting to apply a schema to a directory a second time.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AttachObject
func (c *CloudDirectory) AttachObject(input *AttachObjectInput) (*AttachObjectOutput, error) {
	req, out := c.AttachObjectRequest(input)
	return out, req.Send()
}

// AttachObjectWithContext is the same as AttachObject with the addition of
// the ability to pass a context and additional request options.
//
// See AttachObject for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) AttachObjectWithContext(ctx aws.Context, input *AttachObjectInput, opts ...request.Option) (*AttachObjectOutput, error) {
	req, out := c.AttachObjectRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachPolicy = "AttachPolicy"

// AttachPolicyRequest generates a "aws/request.Request" representing the
// client's request for the AttachPolicy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachPolicy for more information on using the AttachPolicy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachPolicyRequest method.
//    req, resp := client.AttachPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AttachPolicy
func (c *CloudDirectory) AttachPolicyRequest(input *AttachPolicyInput) (req *request.Request, output *AttachPolicyOutput) {
	op := &request.Operation{
		Name:       opAttachPolicy,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/policy/attach",
	}

	if input == nil {
		input = &AttachPolicyInput{}
	}

	output = &AttachPolicyOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// AttachPolicy API operation for Amazon CloudDirectory.
//
// Attaches a policy object to a regular object. An object can have a limited
// number of attached policies.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation AttachPolicy for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeNotPolicyException "NotPolicyException"
//   Indicates that the requested operation can only operate on policy objects.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AttachPolicy
func (c *CloudDirectory) AttachPolicy(input *AttachPolicyInput) (*AttachPolicyOutput, error) {
	req, out := c.AttachPolicyRequest(input)
	return out, req.Send()
}

// AttachPolicyWithContext is the same as AttachPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See AttachPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) AttachPolicyWithContext(ctx aws.Context, input *AttachPolicyInput, opts ...request.Option) (*AttachPolicyOutput, error) {
	req, out := c.AttachPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachToIndex = "AttachToIndex"

// AttachToIndexRequest generates a "aws/request.Request" representing the
// client's request for the AttachToIndex operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachToIndex for more information on using the AttachToIndex
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachToIndexRequest method.
//    req, resp := client.AttachToIndexRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AttachToIndex
func (c *CloudDirectory) AttachToIndexRequest(input *AttachToIndexInput) (req *request.Request, output *AttachToIndexOutput) {
	op := &request.Operation{
		Name:       opAttachToIndex,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/index/attach",
	}

	if input == nil {
		input = &AttachToIndexInput{}
	}

	output = &AttachToIndexOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AttachToIndex API operation for Amazon CloudDirectory.
//
// Attaches the specified object to the specified index.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation AttachToIndex for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeInvalidAttachmentException "InvalidAttachmentException"
//   Indicates that an attempt to make an attachment was invalid. For example,
//   attaching two nodes with a link type that is not applicable to the nodes
//   or attempting to apply a schema to a directory a second time.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeLinkNameAlreadyInUseException "LinkNameAlreadyInUseException"
//   Indicates that a link could not be created due to a naming conflict. Choose
//   a different name and then try again.
//
//   * ErrCodeIndexedAttributeMissingException "IndexedAttributeMissingException"
//   An object has been attempted to be attached to an object that does not have
//   the appropriate attribute value.
//
//   * ErrCodeNotIndexException "NotIndexException"
//   Indicates that the requested operation can only operate on index objects.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AttachToIndex
func (c *CloudDirectory) AttachToIndex(input *AttachToIndexInput) (*AttachToIndexOutput, error) {
	req, out := c.AttachToIndexRequest(input)
	return out, req.Send()
}

// AttachToIndexWithContext is the same as AttachToIndex with the addition of
// the ability to pass a context and additional request options.
//
// See AttachToIndex for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) AttachToIndexWithContext(ctx aws.Context, input *AttachToIndexInput, opts ...request.Option) (*AttachToIndexOutput, error) {
	req, out := c.AttachToIndexRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAttachTypedLink = "AttachTypedLink"

// AttachTypedLinkRequest generates a "aws/request.Request" representing the
// client's request for the AttachTypedLink operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See AttachTypedLink for more information on using the AttachTypedLink
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the AttachTypedLinkRequest method.
//    req, resp := client.AttachTypedLinkRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AttachTypedLink
func (c *CloudDirectory) AttachTypedLinkRequest(input *AttachTypedLinkInput) (req *request.Request, output *AttachTypedLinkOutput) {
	op := &request.Operation{
		Name:       opAttachTypedLink,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/typedlink/attach",
	}

	if input == nil {
		input = &AttachTypedLinkInput{}
	}

	output = &AttachTypedLinkOutput{}
	req = c.newRequest(op, input, output)
	return
}

// AttachTypedLink API operation for Amazon CloudDirectory.
//
// Attaches a typed link to a specified source and target object. For more information,
// see Typed Links (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation AttachTypedLink for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidAttachmentException "InvalidAttachmentException"
//   Indicates that an attempt to make an attachment was invalid. For example,
//   attaching two nodes with a link type that is not applicable to the nodes
//   or attempting to apply a schema to a directory a second time.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/AttachTypedLink
func (c *CloudDirectory) AttachTypedLink(input *AttachTypedLinkInput) (*AttachTypedLinkOutput, error) {
	req, out := c.AttachTypedLinkRequest(input)
	return out, req.Send()
}

// AttachTypedLinkWithContext is the same as AttachTypedLink with the addition of
// the ability to pass a context and additional request options.
//
// See AttachTypedLink for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) AttachTypedLinkWithContext(ctx aws.Context, input *AttachTypedLinkInput, opts ...request.Option) (*AttachTypedLinkOutput, error) {
	req, out := c.AttachTypedLinkRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opBatchRead = "BatchRead"

// BatchReadRequest generates a "aws/request.Request" representing the
// client's request for the BatchRead operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See BatchRead for more information on using the BatchRead
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the BatchReadRequest method.
//    req, resp := client.BatchReadRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/BatchRead
func (c *CloudDirectory) BatchReadRequest(input *BatchReadInput) (req *request.Request, output *BatchReadOutput) {
	op := &request.Operation{
		Name:       opBatchRead,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/batchread",
	}

	if input == nil {
		input = &BatchReadInput{}
	}

	output = &BatchReadOutput{}
	req = c.newRequest(op, input, output)
	return
}

// BatchRead API operation for Amazon CloudDirectory.
//
// Performs all the read operations in a batch.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation BatchRead for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/BatchRead
func (c *CloudDirectory) BatchRead(input *BatchReadInput) (*BatchReadOutput, error) {
	req, out := c.BatchReadRequest(input)
	return out, req.Send()
}

// BatchReadWithContext is the same as BatchRead with the addition of
// the ability to pass a context and additional request options.
//
// See BatchRead for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) BatchReadWithContext(ctx aws.Context, input *BatchReadInput, opts ...request.Option) (*BatchReadOutput, error) {
	req, out := c.BatchReadRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opBatchWrite = "BatchWrite"

// BatchWriteRequest generates a "aws/request.Request" representing the
// client's request for the BatchWrite operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See BatchWrite for more information on using the BatchWrite
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the BatchWriteRequest method.
//    req, resp := client.BatchWriteRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/BatchWrite
func (c *CloudDirectory) BatchWriteRequest(input *BatchWriteInput) (req *request.Request, output *BatchWriteOutput) {
	op := &request.Operation{
		Name:       opBatchWrite,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/batchwrite",
	}

	if input == nil {
		input = &BatchWriteInput{}
	}

	output = &BatchWriteOutput{}
	req = c.newRequest(op, input, output)
	return
}

// BatchWrite API operation for Amazon CloudDirectory.
//
// Performs all the write operations in a batch. Either all the operations succeed
// or none.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation BatchWrite for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeBatchWriteException "BatchWriteException"
//   A BatchWrite exception has occurred.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/BatchWrite
func (c *CloudDirectory) BatchWrite(input *BatchWriteInput) (*BatchWriteOutput, error) {
	req, out := c.BatchWriteRequest(input)
	return out, req.Send()
}

// BatchWriteWithContext is the same as BatchWrite with the addition of
// the ability to pass a context and additional request options.
//
// See BatchWrite for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) BatchWriteWithContext(ctx aws.Context, input *BatchWriteInput, opts ...request.Option) (*BatchWriteOutput, error) {
	req, out := c.BatchWriteRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateDirectory = "CreateDirectory"

// CreateDirectoryRequest generates a "aws/request.Request" representing the
// client's request for the CreateDirectory operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateDirectory for more information on using the CreateDirectory
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateDirectoryRequest method.
//    req, resp := client.CreateDirectoryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateDirectory
func (c *CloudDirectory) CreateDirectoryRequest(input *CreateDirectoryInput) (req *request.Request, output *CreateDirectoryOutput) {
	op := &request.Operation{
		Name:       opCreateDirectory,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/directory/create",
	}

	if input == nil {
		input = &CreateDirectoryInput{}
	}

	output = &CreateDirectoryOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateDirectory API operation for Amazon CloudDirectory.
//
// Creates a Directory by copying the published schema into the directory. A
// directory cannot be created without a schema.
//
// You can also quickly create a directory using a managed schema, called the
// QuickStartSchema. For more information, see Managed Schema (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_managed.html)
// in the Amazon Cloud Directory Developer Guide.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation CreateDirectory for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryAlreadyExistsException "DirectoryAlreadyExistsException"
//   Indicates that a Directory could not be created due to a naming conflict.
//   Choose a different name and try again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateDirectory
func (c *CloudDirectory) CreateDirectory(input *CreateDirectoryInput) (*CreateDirectoryOutput, error) {
	req, out := c.CreateDirectoryRequest(input)
	return out, req.Send()
}

// CreateDirectoryWithContext is the same as CreateDirectory with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDirectory for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) CreateDirectoryWithContext(ctx aws.Context, input *CreateDirectoryInput, opts ...request.Option) (*CreateDirectoryOutput, error) {
	req, out := c.CreateDirectoryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateFacet = "CreateFacet"

// CreateFacetRequest generates a "aws/request.Request" representing the
// client's request for the CreateFacet operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateFacet for more information on using the CreateFacet
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateFacetRequest method.
//    req, resp := client.CreateFacetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateFacet
func (c *CloudDirectory) CreateFacetRequest(input *CreateFacetInput) (req *request.Request, output *CreateFacetOutput) {
	op := &request.Operation{
		Name:       opCreateFacet,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/facet/create",
	}

	if input == nil {
		input = &CreateFacetInput{}
	}

	output = &CreateFacetOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// CreateFacet API operation for Amazon CloudDirectory.
//
// Creates a new Facet in a schema. Facet creation is allowed only in development
// or applied schemas.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation CreateFacet for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetAlreadyExistsException "FacetAlreadyExistsException"
//   A facet with the same name already exists.
//
//   * ErrCodeInvalidRuleException "InvalidRuleException"
//   Occurs when any of the rule parameter keys or values are invalid.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateFacet
func (c *CloudDirectory) CreateFacet(input *CreateFacetInput) (*CreateFacetOutput, error) {
	req, out := c.CreateFacetRequest(input)
	return out, req.Send()
}

// CreateFacetWithContext is the same as CreateFacet with the addition of
// the ability to pass a context and additional request options.
//
// See CreateFacet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) CreateFacetWithContext(ctx aws.Context, input *CreateFacetInput, opts ...request.Option) (*CreateFacetOutput, error) {
	req, out := c.CreateFacetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateIndex = "CreateIndex"

// CreateIndexRequest generates a "aws/request.Request" representing the
// client's request for the CreateIndex operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateIndex for more information on using the CreateIndex
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateIndexRequest method.
//    req, resp := client.CreateIndexRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateIndex
func (c *CloudDirectory) CreateIndexRequest(input *CreateIndexInput) (req *request.Request, output *CreateIndexOutput) {
	op := &request.Operation{
		Name:       opCreateIndex,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/index",
	}

	if input == nil {
		input = &CreateIndexInput{}
	}

	output = &CreateIndexOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateIndex API operation for Amazon CloudDirectory.
//
// Creates an index object. See Indexing and search (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/indexing_search.html)
// for more information.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation CreateIndex for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
//   * ErrCodeLinkNameAlreadyInUseException "LinkNameAlreadyInUseException"
//   Indicates that a link could not be created due to a naming conflict. Choose
//   a different name and then try again.
//
//   * ErrCodeUnsupportedIndexTypeException "UnsupportedIndexTypeException"
//   Indicates that the requested index type is not supported.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateIndex
func (c *CloudDirectory) CreateIndex(input *CreateIndexInput) (*CreateIndexOutput, error) {
	req, out := c.CreateIndexRequest(input)
	return out, req.Send()
}

// CreateIndexWithContext is the same as CreateIndex with the addition of
// the ability to pass a context and additional request options.
//
// See CreateIndex for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) CreateIndexWithContext(ctx aws.Context, input *CreateIndexInput, opts ...request.Option) (*CreateIndexOutput, error) {
	req, out := c.CreateIndexRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateObject = "CreateObject"

// CreateObjectRequest generates a "aws/request.Request" representing the
// client's request for the CreateObject operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateObject for more information on using the CreateObject
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateObjectRequest method.
//    req, resp := client.CreateObjectRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateObject
func (c *CloudDirectory) CreateObjectRequest(input *CreateObjectInput) (req *request.Request, output *CreateObjectOutput) {
	op := &request.Operation{
		Name:       opCreateObject,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object",
	}

	if input == nil {
		input = &CreateObjectInput{}
	}

	output = &CreateObjectOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateObject API operation for Amazon CloudDirectory.
//
// Creates an object in a Directory. Additionally attaches the object to a parent,
// if a parent reference and LinkName is specified. An object is simply a collection
// of Facet attributes. You can also use this API call to create a policy object,
// if the facet from which you create the object is a policy facet.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation CreateObject for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
//   * ErrCodeLinkNameAlreadyInUseException "LinkNameAlreadyInUseException"
//   Indicates that a link could not be created due to a naming conflict. Choose
//   a different name and then try again.
//
//   * ErrCodeUnsupportedIndexTypeException "UnsupportedIndexTypeException"
//   Indicates that the requested index type is not supported.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateObject
func (c *CloudDirectory) CreateObject(input *CreateObjectInput) (*CreateObjectOutput, error) {
	req, out := c.CreateObjectRequest(input)
	return out, req.Send()
}

// CreateObjectWithContext is the same as CreateObject with the addition of
// the ability to pass a context and additional request options.
//
// See CreateObject for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) CreateObjectWithContext(ctx aws.Context, input *CreateObjectInput, opts ...request.Option) (*CreateObjectOutput, error) {
	req, out := c.CreateObjectRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateSchema = "CreateSchema"

// CreateSchemaRequest generates a "aws/request.Request" representing the
// client's request for the CreateSchema operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateSchema for more information on using the CreateSchema
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateSchemaRequest method.
//    req, resp := client.CreateSchemaRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateSchema
func (c *CloudDirectory) CreateSchemaRequest(input *CreateSchemaInput) (req *request.Request, output *CreateSchemaOutput) {
	op := &request.Operation{
		Name:       opCreateSchema,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/schema/create",
	}

	if input == nil {
		input = &CreateSchemaInput{}
	}

	output = &CreateSchemaOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateSchema API operation for Amazon CloudDirectory.
//
// Creates a new schema in a development state. A schema can exist in three
// phases:
//
//    * Development: This is a mutable phase of the schema. All new schemas
//    are in the development phase. Once the schema is finalized, it can be
//    published.
//
//    * Published: Published schemas are immutable and have a version associated
//    with them.
//
//    * Applied: Applied schemas are mutable in a way that allows you to add
//    new schema facets. You can also add new, nonrequired attributes to existing
//    schema facets. You can apply only published schemas to directories.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation CreateSchema for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeSchemaAlreadyExistsException "SchemaAlreadyExistsException"
//   Indicates that a schema could not be created due to a naming conflict. Please
//   select a different name and then try again.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateSchema
func (c *CloudDirectory) CreateSchema(input *CreateSchemaInput) (*CreateSchemaOutput, error) {
	req, out := c.CreateSchemaRequest(input)
	return out, req.Send()
}

// CreateSchemaWithContext is the same as CreateSchema with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSchema for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) CreateSchemaWithContext(ctx aws.Context, input *CreateSchemaInput, opts ...request.Option) (*CreateSchemaOutput, error) {
	req, out := c.CreateSchemaRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTypedLinkFacet = "CreateTypedLinkFacet"

// CreateTypedLinkFacetRequest generates a "aws/request.Request" representing the
// client's request for the CreateTypedLinkFacet operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateTypedLinkFacet for more information on using the CreateTypedLinkFacet
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateTypedLinkFacetRequest method.
//    req, resp := client.CreateTypedLinkFacetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateTypedLinkFacet
func (c *CloudDirectory) CreateTypedLinkFacetRequest(input *CreateTypedLinkFacetInput) (req *request.Request, output *CreateTypedLinkFacetOutput) {
	op := &request.Operation{
		Name:       opCreateTypedLinkFacet,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/typedlink/facet/create",
	}

	if input == nil {
		input = &CreateTypedLinkFacetInput{}
	}

	output = &CreateTypedLinkFacetOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// CreateTypedLinkFacet API operation for Amazon CloudDirectory.
//
// Creates a TypedLinkFacet. For more information, see Typed Links (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation CreateTypedLinkFacet for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetAlreadyExistsException "FacetAlreadyExistsException"
//   A facet with the same name already exists.
//
//   * ErrCodeInvalidRuleException "InvalidRuleException"
//   Occurs when any of the rule parameter keys or values are invalid.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/CreateTypedLinkFacet
func (c *CloudDirectory) CreateTypedLinkFacet(input *CreateTypedLinkFacetInput) (*CreateTypedLinkFacetOutput, error) {
	req, out := c.CreateTypedLinkFacetRequest(input)
	return out, req.Send()
}

// CreateTypedLinkFacetWithContext is the same as CreateTypedLinkFacet with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTypedLinkFacet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) CreateTypedLinkFacetWithContext(ctx aws.Context, input *CreateTypedLinkFacetInput, opts ...request.Option) (*CreateTypedLinkFacetOutput, error) {
	req, out := c.CreateTypedLinkFacetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteDirectory = "DeleteDirectory"

// DeleteDirectoryRequest generates a "aws/request.Request" representing the
// client's request for the DeleteDirectory operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteDirectory for more information on using the DeleteDirectory
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteDirectoryRequest method.
//    req, resp := client.DeleteDirectoryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteDirectory
func (c *CloudDirectory) DeleteDirectoryRequest(input *DeleteDirectoryInput) (req *request.Request, output *DeleteDirectoryOutput) {
	op := &request.Operation{
		Name:       opDeleteDirectory,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/directory",
	}

	if input == nil {
		input = &DeleteDirectoryInput{}
	}

	output = &DeleteDirectoryOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteDirectory API operation for Amazon CloudDirectory.
//
// Deletes a directory. Only disabled directories can be deleted. A deleted
// directory cannot be undone. Exercise extreme caution when deleting directories.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DeleteDirectory for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeDirectoryNotDisabledException "DirectoryNotDisabledException"
//   An operation can only operate on a disabled directory.
//
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryDeletedException "DirectoryDeletedException"
//   A directory that has been deleted and to which access has been attempted.
//   Note: The requested resource will eventually cease to exist.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteDirectory
func (c *CloudDirectory) DeleteDirectory(input *DeleteDirectoryInput) (*DeleteDirectoryOutput, error) {
	req, out := c.DeleteDirectoryRequest(input)
	return out, req.Send()
}

// DeleteDirectoryWithContext is the same as DeleteDirectory with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDirectory for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DeleteDirectoryWithContext(ctx aws.Context, input *DeleteDirectoryInput, opts ...request.Option) (*DeleteDirectoryOutput, error) {
	req, out := c.DeleteDirectoryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteFacet = "DeleteFacet"

// DeleteFacetRequest generates a "aws/request.Request" representing the
// client's request for the DeleteFacet operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteFacet for more information on using the DeleteFacet
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteFacetRequest method.
//    req, resp := client.DeleteFacetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteFacet
func (c *CloudDirectory) DeleteFacetRequest(input *DeleteFacetInput) (req *request.Request, output *DeleteFacetOutput) {
	op := &request.Operation{
		Name:       opDeleteFacet,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/facet/delete",
	}

	if input == nil {
		input = &DeleteFacetInput{}
	}

	output = &DeleteFacetOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// DeleteFacet API operation for Amazon CloudDirectory.
//
// Deletes a given Facet. All attributes and Rules that are associated with
// the facet will be deleted. Only development schema facets are allowed deletion.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DeleteFacet for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetNotFoundException "FacetNotFoundException"
//   The specified Facet could not be found.
//
//   * ErrCodeFacetInUseException "FacetInUseException"
//   Occurs when deleting a facet that contains an attribute that is a target
//   to an attribute reference in a different facet.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteFacet
func (c *CloudDirectory) DeleteFacet(input *DeleteFacetInput) (*DeleteFacetOutput, error) {
	req, out := c.DeleteFacetRequest(input)
	return out, req.Send()
}

// DeleteFacetWithContext is the same as DeleteFacet with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteFacet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DeleteFacetWithContext(ctx aws.Context, input *DeleteFacetInput, opts ...request.Option) (*DeleteFacetOutput, error) {
	req, out := c.DeleteFacetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteObject = "DeleteObject"

// DeleteObjectRequest generates a "aws/request.Request" representing the
// client's request for the DeleteObject operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteObject for more information on using the DeleteObject
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteObjectRequest method.
//    req, resp := client.DeleteObjectRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteObject
func (c *CloudDirectory) DeleteObjectRequest(input *DeleteObjectInput) (req *request.Request, output *DeleteObjectOutput) {
	op := &request.Operation{
		Name:       opDeleteObject,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/delete",
	}

	if input == nil {
		input = &DeleteObjectInput{}
	}

	output = &DeleteObjectOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// DeleteObject API operation for Amazon CloudDirectory.
//
// Deletes an object and its associated attributes. Only objects with no children
// and no parents can be deleted. The maximum number of attributes that can
// be deleted during an object deletion is 30. For more information, see Amazon
// Cloud Directory Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html).
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DeleteObject for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeObjectNotDetachedException "ObjectNotDetachedException"
//   Indicates that the requested operation cannot be completed because the object
//   has not been detached from the tree.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteObject
func (c *CloudDirectory) DeleteObject(input *DeleteObjectInput) (*DeleteObjectOutput, error) {
	req, out := c.DeleteObjectRequest(input)
	return out, req.Send()
}

// DeleteObjectWithContext is the same as DeleteObject with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteObject for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DeleteObjectWithContext(ctx aws.Context, input *DeleteObjectInput, opts ...request.Option) (*DeleteObjectOutput, error) {
	req, out := c.DeleteObjectRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteSchema = "DeleteSchema"

// DeleteSchemaRequest generates a "aws/request.Request" representing the
// client's request for the DeleteSchema operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteSchema for more information on using the DeleteSchema
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteSchemaRequest method.
//    req, resp := client.DeleteSchemaRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteSchema
func (c *CloudDirectory) DeleteSchemaRequest(input *DeleteSchemaInput) (req *request.Request, output *DeleteSchemaOutput) {
	op := &request.Operation{
		Name:       opDeleteSchema,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/schema",
	}

	if input == nil {
		input = &DeleteSchemaInput{}
	}

	output = &DeleteSchemaOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteSchema API operation for Amazon CloudDirectory.
//
// Deletes a given schema. Schemas in a development and published state can
// only be deleted.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DeleteSchema for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeStillContainsLinksException "StillContainsLinksException"
//   The object could not be deleted because links still exist. Remove the links
//   and then try the operation again.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteSchema
func (c *CloudDirectory) DeleteSchema(input *DeleteSchemaInput) (*DeleteSchemaOutput, error) {
	req, out := c.DeleteSchemaRequest(input)
	return out, req.Send()
}

// DeleteSchemaWithContext is the same as DeleteSchema with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSchema for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DeleteSchemaWithContext(ctx aws.Context, input *DeleteSchemaInput, opts ...request.Option) (*DeleteSchemaOutput, error) {
	req, out := c.DeleteSchemaRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteTypedLinkFacet = "DeleteTypedLinkFacet"

// DeleteTypedLinkFacetRequest generates a "aws/request.Request" representing the
// client's request for the DeleteTypedLinkFacet operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteTypedLinkFacet for more information on using the DeleteTypedLinkFacet
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteTypedLinkFacetRequest method.
//    req, resp := client.DeleteTypedLinkFacetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteTypedLinkFacet
func (c *CloudDirectory) DeleteTypedLinkFacetRequest(input *DeleteTypedLinkFacetInput) (req *request.Request, output *DeleteTypedLinkFacetOutput) {
	op := &request.Operation{
		Name:       opDeleteTypedLinkFacet,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/typedlink/facet/delete",
	}

	if input == nil {
		input = &DeleteTypedLinkFacetInput{}
	}

	output = &DeleteTypedLinkFacetOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// DeleteTypedLinkFacet API operation for Amazon CloudDirectory.
//
// Deletes a TypedLinkFacet. For more information, see Typed Links (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DeleteTypedLinkFacet for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetNotFoundException "FacetNotFoundException"
//   The specified Facet could not be found.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DeleteTypedLinkFacet
func (c *CloudDirectory) DeleteTypedLinkFacet(input *DeleteTypedLinkFacetInput) (*DeleteTypedLinkFacetOutput, error) {
	req, out := c.DeleteTypedLinkFacetRequest(input)
	return out, req.Send()
}

// DeleteTypedLinkFacetWithContext is the same as DeleteTypedLinkFacet with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTypedLinkFacet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DeleteTypedLinkFacetWithContext(ctx aws.Context, input *DeleteTypedLinkFacetInput, opts ...request.Option) (*DeleteTypedLinkFacetOutput, error) {
	req, out := c.DeleteTypedLinkFacetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachFromIndex = "DetachFromIndex"

// DetachFromIndexRequest generates a "aws/request.Request" representing the
// client's request for the DetachFromIndex operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachFromIndex for more information on using the DetachFromIndex
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachFromIndexRequest method.
//    req, resp := client.DetachFromIndexRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachFromIndex
func (c *CloudDirectory) DetachFromIndexRequest(input *DetachFromIndexInput) (req *request.Request, output *DetachFromIndexOutput) {
	op := &request.Operation{
		Name:       opDetachFromIndex,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/index/detach",
	}

	if input == nil {
		input = &DetachFromIndexInput{}
	}

	output = &DetachFromIndexOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DetachFromIndex API operation for Amazon CloudDirectory.
//
// Detaches the specified object from the specified index.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DetachFromIndex for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeObjectAlreadyDetachedException "ObjectAlreadyDetachedException"
//   Indicates that the object is not attached to the index.
//
//   * ErrCodeNotIndexException "NotIndexException"
//   Indicates that the requested operation can only operate on index objects.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachFromIndex
func (c *CloudDirectory) DetachFromIndex(input *DetachFromIndexInput) (*DetachFromIndexOutput, error) {
	req, out := c.DetachFromIndexRequest(input)
	return out, req.Send()
}

// DetachFromIndexWithContext is the same as DetachFromIndex with the addition of
// the ability to pass a context and additional request options.
//
// See DetachFromIndex for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DetachFromIndexWithContext(ctx aws.Context, input *DetachFromIndexInput, opts ...request.Option) (*DetachFromIndexOutput, error) {
	req, out := c.DetachFromIndexRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachObject = "DetachObject"

// DetachObjectRequest generates a "aws/request.Request" representing the
// client's request for the DetachObject operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachObject for more information on using the DetachObject
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachObjectRequest method.
//    req, resp := client.DetachObjectRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachObject
func (c *CloudDirectory) DetachObjectRequest(input *DetachObjectInput) (req *request.Request, output *DetachObjectOutput) {
	op := &request.Operation{
		Name:       opDetachObject,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/detach",
	}

	if input == nil {
		input = &DetachObjectInput{}
	}

	output = &DetachObjectOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DetachObject API operation for Amazon CloudDirectory.
//
// Detaches a given object from the parent object. The object that is to be
// detached from the parent is specified by the link name.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DetachObject for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeNotNodeException "NotNodeException"
//   Occurs when any invalid operations are performed on an object that is not
//   a node, such as calling ListObjectChildren for a leaf node object.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachObject
func (c *CloudDirectory) DetachObject(input *DetachObjectInput) (*DetachObjectOutput, error) {
	req, out := c.DetachObjectRequest(input)
	return out, req.Send()
}

// DetachObjectWithContext is the same as DetachObject with the addition of
// the ability to pass a context and additional request options.
//
// See DetachObject for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DetachObjectWithContext(ctx aws.Context, input *DetachObjectInput, opts ...request.Option) (*DetachObjectOutput, error) {
	req, out := c.DetachObjectRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachPolicy = "DetachPolicy"

// DetachPolicyRequest generates a "aws/request.Request" representing the
// client's request for the DetachPolicy operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachPolicy for more information on using the DetachPolicy
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachPolicyRequest method.
//    req, resp := client.DetachPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachPolicy
func (c *CloudDirectory) DetachPolicyRequest(input *DetachPolicyInput) (req *request.Request, output *DetachPolicyOutput) {
	op := &request.Operation{
		Name:       opDetachPolicy,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/policy/detach",
	}

	if input == nil {
		input = &DetachPolicyInput{}
	}

	output = &DetachPolicyOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// DetachPolicy API operation for Amazon CloudDirectory.
//
// Detaches a policy from an object.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DetachPolicy for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeNotPolicyException "NotPolicyException"
//   Indicates that the requested operation can only operate on policy objects.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachPolicy
func (c *CloudDirectory) DetachPolicy(input *DetachPolicyInput) (*DetachPolicyOutput, error) {
	req, out := c.DetachPolicyRequest(input)
	return out, req.Send()
}

// DetachPolicyWithContext is the same as DetachPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See DetachPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DetachPolicyWithContext(ctx aws.Context, input *DetachPolicyInput, opts ...request.Option) (*DetachPolicyOutput, error) {
	req, out := c.DetachPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetachTypedLink = "DetachTypedLink"

// DetachTypedLinkRequest generates a "aws/request.Request" representing the
// client's request for the DetachTypedLink operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DetachTypedLink for more information on using the DetachTypedLink
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DetachTypedLinkRequest method.
//    req, resp := client.DetachTypedLinkRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachTypedLink
func (c *CloudDirectory) DetachTypedLinkRequest(input *DetachTypedLinkInput) (req *request.Request, output *DetachTypedLinkOutput) {
	op := &request.Operation{
		Name:       opDetachTypedLink,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/typedlink/detach",
	}

	if input == nil {
		input = &DetachTypedLinkInput{}
	}

	output = &DetachTypedLinkOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(restjson.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// DetachTypedLink API operation for Amazon CloudDirectory.
//
// Detaches a typed link from a specified source and target object. For more
// information, see Typed Links (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DetachTypedLink for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DetachTypedLink
func (c *CloudDirectory) DetachTypedLink(input *DetachTypedLinkInput) (*DetachTypedLinkOutput, error) {
	req, out := c.DetachTypedLinkRequest(input)
	return out, req.Send()
}

// DetachTypedLinkWithContext is the same as DetachTypedLink with the addition of
// the ability to pass a context and additional request options.
//
// See DetachTypedLink for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DetachTypedLinkWithContext(ctx aws.Context, input *DetachTypedLinkInput, opts ...request.Option) (*DetachTypedLinkOutput, error) {
	req, out := c.DetachTypedLinkRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisableDirectory = "DisableDirectory"

// DisableDirectoryRequest generates a "aws/request.Request" representing the
// client's request for the DisableDirectory operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DisableDirectory for more information on using the DisableDirectory
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DisableDirectoryRequest method.
//    req, resp := client.DisableDirectoryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DisableDirectory
func (c *CloudDirectory) DisableDirectoryRequest(input *DisableDirectoryInput) (req *request.Request, output *DisableDirectoryOutput) {
	op := &request.Operation{
		Name:       opDisableDirectory,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/directory/disable",
	}

	if input == nil {
		input = &DisableDirectoryInput{}
	}

	output = &DisableDirectoryOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DisableDirectory API operation for Amazon CloudDirectory.
//
// Disables the specified directory. Disabled directories cannot be read or
// written to. Only enabled directories can be disabled. Disabled directories
// may be reenabled.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation DisableDirectory for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeDirectoryDeletedException "DirectoryDeletedException"
//   A directory that has been deleted and to which access has been attempted.
//   Note: The requested resource will eventually cease to exist.
//
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/DisableDirectory
func (c *CloudDirectory) DisableDirectory(input *DisableDirectoryInput) (*DisableDirectoryOutput, error) {
	req, out := c.DisableDirectoryRequest(input)
	return out, req.Send()
}

// DisableDirectoryWithContext is the same as DisableDirectory with the addition of
// the ability to pass a context and additional request options.
//
// See DisableDirectory for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) DisableDirectoryWithContext(ctx aws.Context, input *DisableDirectoryInput, opts ...request.Option) (*DisableDirectoryOutput, error) {
	req, out := c.DisableDirectoryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opEnableDirectory = "EnableDirectory"

// EnableDirectoryRequest generates a "aws/request.Request" representing the
// client's request for the EnableDirectory operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See EnableDirectory for more information on using the EnableDirectory
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the EnableDirectoryRequest method.
//    req, resp := client.EnableDirectoryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/EnableDirectory
func (c *CloudDirectory) EnableDirectoryRequest(input *EnableDirectoryInput) (req *request.Request, output *EnableDirectoryOutput) {
	op := &request.Operation{
		Name:       opEnableDirectory,
		HTTPMethod: "PUT",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/directory/enable",
	}

	if input == nil {
		input = &EnableDirectoryInput{}
	}

	output = &EnableDirectoryOutput{}
	req = c.newRequest(op, input, output)
	return
}

// EnableDirectory API operation for Amazon CloudDirectory.
//
// Enables the specified directory. Only disabled directories can be enabled.
// Once enabled, the directory can then be read and written to.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation EnableDirectory for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeDirectoryDeletedException "DirectoryDeletedException"
//   A directory that has been deleted and to which access has been attempted.
//   Note: The requested resource will eventually cease to exist.
//
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/EnableDirectory
func (c *CloudDirectory) EnableDirectory(input *EnableDirectoryInput) (*EnableDirectoryOutput, error) {
	req, out := c.EnableDirectoryRequest(input)
	return out, req.Send()
}

// EnableDirectoryWithContext is the same as EnableDirectory with the addition of
// the ability to pass a context and additional request options.
//
// See EnableDirectory for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) EnableDirectoryWithContext(ctx aws.Context, input *EnableDirectoryInput, opts ...request.Option) (*EnableDirectoryOutput, error) {
	req, out := c.EnableDirectoryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetAppliedSchemaVersion = "GetAppliedSchemaVersion"

// GetAppliedSchemaVersionRequest generates a "aws/request.Request" representing the
// client's request for the GetAppliedSchemaVersion operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetAppliedSchemaVersion for more information on using the GetAppliedSchemaVersion
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the GetAppliedSchemaVersionRequest method.
//    req, resp := client.GetAppliedSchemaVersionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetAppliedSchemaVersion
func (c *CloudDirectory) GetAppliedSchemaVersionRequest(input *GetAppliedSchemaVersionInput) (req *request.Request, output *GetAppliedSchemaVersionOutput) {
	op := &request.Operation{
		Name:       opGetAppliedSchemaVersion,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/schema/getappliedschema",
	}

	if input == nil {
		input = &GetAppliedSchemaVersionInput{}
	}

	output = &GetAppliedSchemaVersionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetAppliedSchemaVersion API operation for Amazon CloudDirectory.
//
// Returns current applied schema version ARN, including the minor version in
// use.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation GetAppliedSchemaVersion for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetAppliedSchemaVersion
func (c *CloudDirectory) GetAppliedSchemaVersion(input *GetAppliedSchemaVersionInput) (*GetAppliedSchemaVersionOutput, error) {
	req, out := c.GetAppliedSchemaVersionRequest(input)
	return out, req.Send()
}

// GetAppliedSchemaVersionWithContext is the same as GetAppliedSchemaVersion with the addition of
// the ability to pass a context and additional request options.
//
// See GetAppliedSchemaVersion for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) GetAppliedSchemaVersionWithContext(ctx aws.Context, input *GetAppliedSchemaVersionInput, opts ...request.Option) (*GetAppliedSchemaVersionOutput, error) {
	req, out := c.GetAppliedSchemaVersionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDirectory = "GetDirectory"

// GetDirectoryRequest generates a "aws/request.Request" representing the
// client's request for the GetDirectory operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetDirectory for more information on using the GetDirectory
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the GetDirectoryRequest method.
//    req, resp := client.GetDirectoryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetDirectory
func (c *CloudDirectory) GetDirectoryRequest(input *GetDirectoryInput) (req *request.Request, output *GetDirectoryOutput) {
	op := &request.Operation{
		Name:       opGetDirectory,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/directory/get",
	}

	if input == nil {
		input = &GetDirectoryInput{}
	}

	output = &GetDirectoryOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetDirectory API operation for Amazon CloudDirectory.
//
// Retrieves metadata about a directory.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation GetDirectory for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetDirectory
func (c *CloudDirectory) GetDirectory(input *GetDirectoryInput) (*GetDirectoryOutput, error) {
	req, out := c.GetDirectoryRequest(input)
	return out, req.Send()
}

// GetDirectoryWithContext is the same as GetDirectory with the addition of
// the ability to pass a context and additional request options.
//
// See GetDirectory for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) GetDirectoryWithContext(ctx aws.Context, input *GetDirectoryInput, opts ...request.Option) (*GetDirectoryOutput, error) {
	req, out := c.GetDirectoryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetFacet = "GetFacet"

// GetFacetRequest generates a "aws/request.Request" representing the
// client's request for the GetFacet operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetFacet for more information on using the GetFacet
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the GetFacetRequest method.
//    req, resp := client.GetFacetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetFacet
func (c *CloudDirectory) GetFacetRequest(input *GetFacetInput) (req *request.Request, output *GetFacetOutput) {
	op := &request.Operation{
		Name:       opGetFacet,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/facet",
	}

	if input == nil {
		input = &GetFacetInput{}
	}

	output = &GetFacetOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetFacet API operation for Amazon CloudDirectory.
//
// Gets details of the Facet, such as facet name, attributes, Rules, or ObjectType.
// You can call this on all kinds of schema facets -- published, development,
// or applied.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation GetFacet for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetNotFoundException "FacetNotFoundException"
//   The specified Facet could not be found.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetFacet
func (c *CloudDirectory) GetFacet(input *GetFacetInput) (*GetFacetOutput, error) {
	req, out := c.GetFacetRequest(input)
	return out, req.Send()
}

// GetFacetWithContext is the same as GetFacet with the addition of
// the ability to pass a context and additional request options.
//
// See GetFacet for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) GetFacetWithContext(ctx aws.Context, input *GetFacetInput, opts ...request.Option) (*GetFacetOutput, error) {
	req, out := c.GetFacetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetLinkAttributes = "GetLinkAttributes"

// GetLinkAttributesRequest generates a "aws/request.Request" representing the
// client's request for the GetLinkAttributes operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetLinkAttributes for more information on using the GetLinkAttributes
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the GetLinkAttributesRequest method.
//    req, resp := client.GetLinkAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetLinkAttributes
func (c *CloudDirectory) GetLinkAttributesRequest(input *GetLinkAttributesInput) (req *request.Request, output *GetLinkAttributesOutput) {
	op := &request.Operation{
		Name:       opGetLinkAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/typedlink/attributes/get",
	}

	if input == nil {
		input = &GetLinkAttributesInput{}
	}

	output = &GetLinkAttributesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetLinkAttributes API operation for Amazon CloudDirectory.
//
// Retrieves attributes that are associated with a typed link.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation GetLinkAttributes for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetLinkAttributes
func (c *CloudDirectory) GetLinkAttributes(input *GetLinkAttributesInput) (*GetLinkAttributesOutput, error) {
	req, out := c.GetLinkAttributesRequest(input)
	return out, req.Send()
}

// GetLinkAttributesWithContext is the same as GetLinkAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See GetLinkAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) GetLinkAttributesWithContext(ctx aws.Context, input *GetLinkAttributesInput, opts ...request.Option) (*GetLinkAttributesOutput, error) {
	req, out := c.GetLinkAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetObjectAttributes = "GetObjectAttributes"

// GetObjectAttributesRequest generates a "aws/request.Request" representing the
// client's request for the GetObjectAttributes operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetObjectAttributes for more information on using the GetObjectAttributes
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the GetObjectAttributesRequest method.
//    req, resp := client.GetObjectAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetObjectAttributes
func (c *CloudDirectory) GetObjectAttributesRequest(input *GetObjectAttributesInput) (req *request.Request, output *GetObjectAttributesOutput) {
	op := &request.Operation{
		Name:       opGetObjectAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/attributes/get",
	}

	if input == nil {
		input = &GetObjectAttributesInput{}
	}

	output = &GetObjectAttributesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetObjectAttributes API operation for Amazon CloudDirectory.
//
// Retrieves attributes within a facet that are associated with an object.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation GetObjectAttributes for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetObjectAttributes
func (c *CloudDirectory) GetObjectAttributes(input *GetObjectAttributesInput) (*GetObjectAttributesOutput, error) {
	req, out := c.GetObjectAttributesRequest(input)
	return out, req.Send()
}

// GetObjectAttributesWithContext is the same as GetObjectAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See GetObjectAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) GetObjectAttributesWithContext(ctx aws.Context, input *GetObjectAttributesInput, opts ...request.Option) (*GetObjectAttributesOutput, error) {
	req, out := c.GetObjectAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetObjectInformation = "GetObjectInformation"

// GetObjectInformationRequest generates a "aws/request.Request" representing the
// client's request for the GetObjectInformation operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetObjectInformation for more information on using the GetObjectInformation
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the GetObjectInformationRequest method.
//    req, resp := client.GetObjectInformationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetObjectInformation
func (c *CloudDirectory) GetObjectInformationRequest(input *GetObjectInformationInput) (req *request.Request, output *GetObjectInformationOutput) {
	op := &request.Operation{
		Name:       opGetObjectInformation,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/information",
	}

	if input == nil {
		input = &GetObjectInformationInput{}
	}

	output = &GetObjectInformationOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetObjectInformation API operation for Amazon CloudDirectory.
//
// Retrieves metadata about an object.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation GetObjectInformation for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetObjectInformation
func (c *CloudDirectory) GetObjectInformation(input *GetObjectInformationInput) (*GetObjectInformationOutput, error) {
	req, out := c.GetObjectInformationRequest(input)
	return out, req.Send()
}

// GetObjectInformationWithContext is the same as GetObjectInformation with the addition of
// the ability to pass a context and additional request options.
//
// See GetObjectInformation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) GetObjectInformationWithContext(ctx aws.Context, input *GetObjectInformationInput, opts ...request.Option) (*GetObjectInformationOutput, error) {
	req, out := c.GetObjectInformationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetSchemaAsJson = "GetSchemaAsJson"

// GetSchemaAsJsonRequest generates a "aws/request.Request" representing the
// client's request for the GetSchemaAsJson operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetSchemaAsJson for more information on using the GetSchemaAsJson
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the GetSchemaAsJsonRequest method.
//    req, resp := client.GetSchemaAsJsonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetSchemaAsJson
func (c *CloudDirectory) GetSchemaAsJsonRequest(input *GetSchemaAsJsonInput) (req *request.Request, output *GetSchemaAsJsonOutput) {
	op := &request.Operation{
		Name:       opGetSchemaAsJson,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/schema/json",
	}

	if input == nil {
		input = &GetSchemaAsJsonInput{}
	}

	output = &GetSchemaAsJsonOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetSchemaAsJson API operation for Amazon CloudDirectory.
//
// Retrieves a JSON representation of the schema. See JSON Schema Format (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/schemas_jsonformat.html#schemas_json)
// for more information.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation GetSchemaAsJson for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetSchemaAsJson
func (c *CloudDirectory) GetSchemaAsJson(input *GetSchemaAsJsonInput) (*GetSchemaAsJsonOutput, error) {
	req, out := c.GetSchemaAsJsonRequest(input)
	return out, req.Send()
}

// GetSchemaAsJsonWithContext is the same as GetSchemaAsJson with the addition of
// the ability to pass a context and additional request options.
//
// See GetSchemaAsJson for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) GetSchemaAsJsonWithContext(ctx aws.Context, input *GetSchemaAsJsonInput, opts ...request.Option) (*GetSchemaAsJsonOutput, error) {
	req, out := c.GetSchemaAsJsonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTypedLinkFacetInformation = "GetTypedLinkFacetInformation"

// GetTypedLinkFacetInformationRequest generates a "aws/request.Request" representing the
// client's request for the GetTypedLinkFacetInformation operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See GetTypedLinkFacetInformation for more information on using the GetTypedLinkFacetInformation
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the GetTypedLinkFacetInformationRequest method.
//    req, resp := client.GetTypedLinkFacetInformationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetTypedLinkFacetInformation
func (c *CloudDirectory) GetTypedLinkFacetInformationRequest(input *GetTypedLinkFacetInformationInput) (req *request.Request, output *GetTypedLinkFacetInformationOutput) {
	op := &request.Operation{
		Name:       opGetTypedLinkFacetInformation,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/typedlink/facet/get",
	}

	if input == nil {
		input = &GetTypedLinkFacetInformationInput{}
	}

	output = &GetTypedLinkFacetInformationOutput{}
	req = c.newRequest(op, input, output)
	return
}

// GetTypedLinkFacetInformation API operation for Amazon CloudDirectory.
//
// Returns the identity attribute order for a specific TypedLinkFacet. For more
// information, see Typed Links (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation GetTypedLinkFacetInformation for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
//   * ErrCodeFacetNotFoundException "FacetNotFoundException"
//   The specified Facet could not be found.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/GetTypedLinkFacetInformation
func (c *CloudDirectory) GetTypedLinkFacetInformation(input *GetTypedLinkFacetInformationInput) (*GetTypedLinkFacetInformationOutput, error) {
	req, out := c.GetTypedLinkFacetInformationRequest(input)
	return out, req.Send()
}

// GetTypedLinkFacetInformationWithContext is the same as GetTypedLinkFacetInformation with the addition of
// the ability to pass a context and additional request options.
//
// See GetTypedLinkFacetInformation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) GetTypedLinkFacetInformationWithContext(ctx aws.Context, input *GetTypedLinkFacetInformationInput, opts ...request.Option) (*GetTypedLinkFacetInformationOutput, error) {
	req, out := c.GetTypedLinkFacetInformationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAppliedSchemaArns = "ListAppliedSchemaArns"

// ListAppliedSchemaArnsRequest generates a "aws/request.Request" representing the
// client's request for the ListAppliedSchemaArns operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListAppliedSchemaArns for more information on using the ListAppliedSchemaArns
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListAppliedSchemaArnsRequest method.
//    req, resp := client.ListAppliedSchemaArnsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListAppliedSchemaArns
func (c *CloudDirectory) ListAppliedSchemaArnsRequest(input *ListAppliedSchemaArnsInput) (req *request.Request, output *ListAppliedSchemaArnsOutput) {
	op := &request.Operation{
		Name:       opListAppliedSchemaArns,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/schema/applied",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListAppliedSchemaArnsInput{}
	}

	output = &ListAppliedSchemaArnsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListAppliedSchemaArns API operation for Amazon CloudDirectory.
//
// Lists schema major versions applied to a directory. If SchemaArn is provided,
// lists the minor version.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListAppliedSchemaArns for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListAppliedSchemaArns
func (c *CloudDirectory) ListAppliedSchemaArns(input *ListAppliedSchemaArnsInput) (*ListAppliedSchemaArnsOutput, error) {
	req, out := c.ListAppliedSchemaArnsRequest(input)
	return out, req.Send()
}

// ListAppliedSchemaArnsWithContext is the same as ListAppliedSchemaArns with the addition of
// the ability to pass a context and additional request options.
//
// See ListAppliedSchemaArns for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListAppliedSchemaArnsWithContext(ctx aws.Context, input *ListAppliedSchemaArnsInput, opts ...request.Option) (*ListAppliedSchemaArnsOutput, error) {
	req, out := c.ListAppliedSchemaArnsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListAppliedSchemaArnsPages iterates over the pages of a ListAppliedSchemaArns operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListAppliedSchemaArns method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListAppliedSchemaArns operation.
//    pageNum := 0
//    err := client.ListAppliedSchemaArnsPages(params,
//        func(page *clouddirectory.ListAppliedSchemaArnsOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListAppliedSchemaArnsPages(input *ListAppliedSchemaArnsInput, fn func(*ListAppliedSchemaArnsOutput, bool) bool) error {
	return c.ListAppliedSchemaArnsPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListAppliedSchemaArnsPagesWithContext same as ListAppliedSchemaArnsPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListAppliedSchemaArnsPagesWithContext(ctx aws.Context, input *ListAppliedSchemaArnsInput, fn func(*ListAppliedSchemaArnsOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListAppliedSchemaArnsInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListAppliedSchemaArnsRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListAppliedSchemaArnsOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListAttachedIndices = "ListAttachedIndices"

// ListAttachedIndicesRequest generates a "aws/request.Request" representing the
// client's request for the ListAttachedIndices operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListAttachedIndices for more information on using the ListAttachedIndices
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListAttachedIndicesRequest method.
//    req, resp := client.ListAttachedIndicesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListAttachedIndices
func (c *CloudDirectory) ListAttachedIndicesRequest(input *ListAttachedIndicesInput) (req *request.Request, output *ListAttachedIndicesOutput) {
	op := &request.Operation{
		Name:       opListAttachedIndices,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/indices",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListAttachedIndicesInput{}
	}

	output = &ListAttachedIndicesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListAttachedIndices API operation for Amazon CloudDirectory.
//
// Lists indices attached to the specified object.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListAttachedIndices for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListAttachedIndices
func (c *CloudDirectory) ListAttachedIndices(input *ListAttachedIndicesInput) (*ListAttachedIndicesOutput, error) {
	req, out := c.ListAttachedIndicesRequest(input)
	return out, req.Send()
}

// ListAttachedIndicesWithContext is the same as ListAttachedIndices with the addition of
// the ability to pass a context and additional request options.
//
// See ListAttachedIndices for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListAttachedIndicesWithContext(ctx aws.Context, input *ListAttachedIndicesInput, opts ...request.Option) (*ListAttachedIndicesOutput, error) {
	req, out := c.ListAttachedIndicesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListAttachedIndicesPages iterates over the pages of a ListAttachedIndices operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListAttachedIndices method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListAttachedIndices operation.
//    pageNum := 0
//    err := client.ListAttachedIndicesPages(params,
//        func(page *clouddirectory.ListAttachedIndicesOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListAttachedIndicesPages(input *ListAttachedIndicesInput, fn func(*ListAttachedIndicesOutput, bool) bool) error {
	return c.ListAttachedIndicesPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListAttachedIndicesPagesWithContext same as ListAttachedIndicesPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListAttachedIndicesPagesWithContext(ctx aws.Context, input *ListAttachedIndicesInput, fn func(*ListAttachedIndicesOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListAttachedIndicesInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListAttachedIndicesRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListAttachedIndicesOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListDevelopmentSchemaArns = "ListDevelopmentSchemaArns"

// ListDevelopmentSchemaArnsRequest generates a "aws/request.Request" representing the
// client's request for the ListDevelopmentSchemaArns operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListDevelopmentSchemaArns for more information on using the ListDevelopmentSchemaArns
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListDevelopmentSchemaArnsRequest method.
//    req, resp := client.ListDevelopmentSchemaArnsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListDevelopmentSchemaArns
func (c *CloudDirectory) ListDevelopmentSchemaArnsRequest(input *ListDevelopmentSchemaArnsInput) (req *request.Request, output *ListDevelopmentSchemaArnsOutput) {
	op := &request.Operation{
		Name:       opListDevelopmentSchemaArns,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/schema/development",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListDevelopmentSchemaArnsInput{}
	}

	output = &ListDevelopmentSchemaArnsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListDevelopmentSchemaArns API operation for Amazon CloudDirectory.
//
// Retrieves each Amazon Resource Name (ARN) of schemas in the development state.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListDevelopmentSchemaArns for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListDevelopmentSchemaArns
func (c *CloudDirectory) ListDevelopmentSchemaArns(input *ListDevelopmentSchemaArnsInput) (*ListDevelopmentSchemaArnsOutput, error) {
	req, out := c.ListDevelopmentSchemaArnsRequest(input)
	return out, req.Send()
}

// ListDevelopmentSchemaArnsWithContext is the same as ListDevelopmentSchemaArns with the addition of
// the ability to pass a context and additional request options.
//
// See ListDevelopmentSchemaArns for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListDevelopmentSchemaArnsWithContext(ctx aws.Context, input *ListDevelopmentSchemaArnsInput, opts ...request.Option) (*ListDevelopmentSchemaArnsOutput, error) {
	req, out := c.ListDevelopmentSchemaArnsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListDevelopmentSchemaArnsPages iterates over the pages of a ListDevelopmentSchemaArns operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListDevelopmentSchemaArns method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListDevelopmentSchemaArns operation.
//    pageNum := 0
//    err := client.ListDevelopmentSchemaArnsPages(params,
//        func(page *clouddirectory.ListDevelopmentSchemaArnsOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListDevelopmentSchemaArnsPages(input *ListDevelopmentSchemaArnsInput, fn func(*ListDevelopmentSchemaArnsOutput, bool) bool) error {
	return c.ListDevelopmentSchemaArnsPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListDevelopmentSchemaArnsPagesWithContext same as ListDevelopmentSchemaArnsPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListDevelopmentSchemaArnsPagesWithContext(ctx aws.Context, input *ListDevelopmentSchemaArnsInput, fn func(*ListDevelopmentSchemaArnsOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListDevelopmentSchemaArnsInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListDevelopmentSchemaArnsRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListDevelopmentSchemaArnsOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListDirectories = "ListDirectories"

// ListDirectoriesRequest generates a "aws/request.Request" representing the
// client's request for the ListDirectories operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListDirectories for more information on using the ListDirectories
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListDirectoriesRequest method.
//    req, resp := client.ListDirectoriesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListDirectories
func (c *CloudDirectory) ListDirectoriesRequest(input *ListDirectoriesInput) (req *request.Request, output *ListDirectoriesOutput) {
	op := &request.Operation{
		Name:       opListDirectories,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/directory/list",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListDirectoriesInput{}
	}

	output = &ListDirectoriesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListDirectories API operation for Amazon CloudDirectory.
//
// Lists directories created within an account.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListDirectories for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListDirectories
func (c *CloudDirectory) ListDirectories(input *ListDirectoriesInput) (*ListDirectoriesOutput, error) {
	req, out := c.ListDirectoriesRequest(input)
	return out, req.Send()
}

// ListDirectoriesWithContext is the same as ListDirectories with the addition of
// the ability to pass a context and additional request options.
//
// See ListDirectories for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListDirectoriesWithContext(ctx aws.Context, input *ListDirectoriesInput, opts ...request.Option) (*ListDirectoriesOutput, error) {
	req, out := c.ListDirectoriesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListDirectoriesPages iterates over the pages of a ListDirectories operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListDirectories method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListDirectories operation.
//    pageNum := 0
//    err := client.ListDirectoriesPages(params,
//        func(page *clouddirectory.ListDirectoriesOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListDirectoriesPages(input *ListDirectoriesInput, fn func(*ListDirectoriesOutput, bool) bool) error {
	return c.ListDirectoriesPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListDirectoriesPagesWithContext same as ListDirectoriesPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListDirectoriesPagesWithContext(ctx aws.Context, input *ListDirectoriesInput, fn func(*ListDirectoriesOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListDirectoriesInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListDirectoriesRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListDirectoriesOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListFacetAttributes = "ListFacetAttributes"

// ListFacetAttributesRequest generates a "aws/request.Request" representing the
// client's request for the ListFacetAttributes operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListFacetAttributes for more information on using the ListFacetAttributes
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListFacetAttributesRequest method.
//    req, resp := client.ListFacetAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListFacetAttributes
func (c *CloudDirectory) ListFacetAttributesRequest(input *ListFacetAttributesInput) (req *request.Request, output *ListFacetAttributesOutput) {
	op := &request.Operation{
		Name:       opListFacetAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/facet/attributes",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListFacetAttributesInput{}
	}

	output = &ListFacetAttributesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListFacetAttributes API operation for Amazon CloudDirectory.
//
// Retrieves attributes attached to the facet.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListFacetAttributes for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeFacetNotFoundException "FacetNotFoundException"
//   The specified Facet could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListFacetAttributes
func (c *CloudDirectory) ListFacetAttributes(input *ListFacetAttributesInput) (*ListFacetAttributesOutput, error) {
	req, out := c.ListFacetAttributesRequest(input)
	return out, req.Send()
}

// ListFacetAttributesWithContext is the same as ListFacetAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ListFacetAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListFacetAttributesWithContext(ctx aws.Context, input *ListFacetAttributesInput, opts ...request.Option) (*ListFacetAttributesOutput, error) {
	req, out := c.ListFacetAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListFacetAttributesPages iterates over the pages of a ListFacetAttributes operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListFacetAttributes method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListFacetAttributes operation.
//    pageNum := 0
//    err := client.ListFacetAttributesPages(params,
//        func(page *clouddirectory.ListFacetAttributesOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListFacetAttributesPages(input *ListFacetAttributesInput, fn func(*ListFacetAttributesOutput, bool) bool) error {
	return c.ListFacetAttributesPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListFacetAttributesPagesWithContext same as ListFacetAttributesPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListFacetAttributesPagesWithContext(ctx aws.Context, input *ListFacetAttributesInput, fn func(*ListFacetAttributesOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListFacetAttributesInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListFacetAttributesRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListFacetAttributesOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListFacetNames = "ListFacetNames"

// ListFacetNamesRequest generates a "aws/request.Request" representing the
// client's request for the ListFacetNames operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListFacetNames for more information on using the ListFacetNames
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListFacetNamesRequest method.
//    req, resp := client.ListFacetNamesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListFacetNames
func (c *CloudDirectory) ListFacetNamesRequest(input *ListFacetNamesInput) (req *request.Request, output *ListFacetNamesOutput) {
	op := &request.Operation{
		Name:       opListFacetNames,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/facet/list",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListFacetNamesInput{}
	}

	output = &ListFacetNamesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListFacetNames API operation for Amazon CloudDirectory.
//
// Retrieves the names of facets that exist in a schema.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListFacetNames for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListFacetNames
func (c *CloudDirectory) ListFacetNames(input *ListFacetNamesInput) (*ListFacetNamesOutput, error) {
	req, out := c.ListFacetNamesRequest(input)
	return out, req.Send()
}

// ListFacetNamesWithContext is the same as ListFacetNames with the addition of
// the ability to pass a context and additional request options.
//
// See ListFacetNames for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListFacetNamesWithContext(ctx aws.Context, input *ListFacetNamesInput, opts ...request.Option) (*ListFacetNamesOutput, error) {
	req, out := c.ListFacetNamesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListFacetNamesPages iterates over the pages of a ListFacetNames operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListFacetNames method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListFacetNames operation.
//    pageNum := 0
//    err := client.ListFacetNamesPages(params,
//        func(page *clouddirectory.ListFacetNamesOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListFacetNamesPages(input *ListFacetNamesInput, fn func(*ListFacetNamesOutput, bool) bool) error {
	return c.ListFacetNamesPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListFacetNamesPagesWithContext same as ListFacetNamesPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListFacetNamesPagesWithContext(ctx aws.Context, input *ListFacetNamesInput, fn func(*ListFacetNamesOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListFacetNamesInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListFacetNamesRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListFacetNamesOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListIncomingTypedLinks = "ListIncomingTypedLinks"

// ListIncomingTypedLinksRequest generates a "aws/request.Request" representing the
// client's request for the ListIncomingTypedLinks operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListIncomingTypedLinks for more information on using the ListIncomingTypedLinks
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListIncomingTypedLinksRequest method.
//    req, resp := client.ListIncomingTypedLinksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListIncomingTypedLinks
func (c *CloudDirectory) ListIncomingTypedLinksRequest(input *ListIncomingTypedLinksInput) (req *request.Request, output *ListIncomingTypedLinksOutput) {
	op := &request.Operation{
		Name:       opListIncomingTypedLinks,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/typedlink/incoming",
	}

	if input == nil {
		input = &ListIncomingTypedLinksInput{}
	}

	output = &ListIncomingTypedLinksOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListIncomingTypedLinks API operation for Amazon CloudDirectory.
//
// Returns a paginated list of all the incoming TypedLinkSpecifier information
// for an object. It also supports filtering by typed link facet and identity
// attributes. For more information, see Typed Links (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/directory_objects_links.html#directory_objects_links_typedlink).
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListIncomingTypedLinks for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListIncomingTypedLinks
func (c *CloudDirectory) ListIncomingTypedLinks(input *ListIncomingTypedLinksInput) (*ListIncomingTypedLinksOutput, error) {
	req, out := c.ListIncomingTypedLinksRequest(input)
	return out, req.Send()
}

// ListIncomingTypedLinksWithContext is the same as ListIncomingTypedLinks with the addition of
// the ability to pass a context and additional request options.
//
// See ListIncomingTypedLinks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListIncomingTypedLinksWithContext(ctx aws.Context, input *ListIncomingTypedLinksInput, opts ...request.Option) (*ListIncomingTypedLinksOutput, error) {
	req, out := c.ListIncomingTypedLinksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListIndex = "ListIndex"

// ListIndexRequest generates a "aws/request.Request" representing the
// client's request for the ListIndex operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListIndex for more information on using the ListIndex
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListIndexRequest method.
//    req, resp := client.ListIndexRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListIndex
func (c *CloudDirectory) ListIndexRequest(input *ListIndexInput) (req *request.Request, output *ListIndexOutput) {
	op := &request.Operation{
		Name:       opListIndex,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/index/targets",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListIndexInput{}
	}

	output = &ListIndexOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListIndex API operation for Amazon CloudDirectory.
//
// Lists objects attached to the specified index.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListIndex for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeNotIndexException "NotIndexException"
//   Indicates that the requested operation can only operate on index objects.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListIndex
func (c *CloudDirectory) ListIndex(input *ListIndexInput) (*ListIndexOutput, error) {
	req, out := c.ListIndexRequest(input)
	return out, req.Send()
}

// ListIndexWithContext is the same as ListIndex with the addition of
// the ability to pass a context and additional request options.
//
// See ListIndex for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListIndexWithContext(ctx aws.Context, input *ListIndexInput, opts ...request.Option) (*ListIndexOutput, error) {
	req, out := c.ListIndexRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListIndexPages iterates over the pages of a ListIndex operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListIndex method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListIndex operation.
//    pageNum := 0
//    err := client.ListIndexPages(params,
//        func(page *clouddirectory.ListIndexOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListIndexPages(input *ListIndexInput, fn func(*ListIndexOutput, bool) bool) error {
	return c.ListIndexPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListIndexPagesWithContext same as ListIndexPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListIndexPagesWithContext(ctx aws.Context, input *ListIndexInput, fn func(*ListIndexOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListIndexInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListIndexRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListIndexOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListManagedSchemaArns = "ListManagedSchemaArns"

// ListManagedSchemaArnsRequest generates a "aws/request.Request" representing the
// client's request for the ListManagedSchemaArns operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListManagedSchemaArns for more information on using the ListManagedSchemaArns
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListManagedSchemaArnsRequest method.
//    req, resp := client.ListManagedSchemaArnsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListManagedSchemaArns
func (c *CloudDirectory) ListManagedSchemaArnsRequest(input *ListManagedSchemaArnsInput) (req *request.Request, output *ListManagedSchemaArnsOutput) {
	op := &request.Operation{
		Name:       opListManagedSchemaArns,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/schema/managed",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListManagedSchemaArnsInput{}
	}

	output = &ListManagedSchemaArnsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListManagedSchemaArns API operation for Amazon CloudDirectory.
//
// Lists the major version families of each managed schema. If a major version
// ARN is provided as SchemaArn, the minor version revisions in that family
// are listed instead.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListManagedSchemaArns for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListManagedSchemaArns
func (c *CloudDirectory) ListManagedSchemaArns(input *ListManagedSchemaArnsInput) (*ListManagedSchemaArnsOutput, error) {
	req, out := c.ListManagedSchemaArnsRequest(input)
	return out, req.Send()
}

// ListManagedSchemaArnsWithContext is the same as ListManagedSchemaArns with the addition of
// the ability to pass a context and additional request options.
//
// See ListManagedSchemaArns for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListManagedSchemaArnsWithContext(ctx aws.Context, input *ListManagedSchemaArnsInput, opts ...request.Option) (*ListManagedSchemaArnsOutput, error) {
	req, out := c.ListManagedSchemaArnsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListManagedSchemaArnsPages iterates over the pages of a ListManagedSchemaArns operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListManagedSchemaArns method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListManagedSchemaArns operation.
//    pageNum := 0
//    err := client.ListManagedSchemaArnsPages(params,
//        func(page *clouddirectory.ListManagedSchemaArnsOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListManagedSchemaArnsPages(input *ListManagedSchemaArnsInput, fn func(*ListManagedSchemaArnsOutput, bool) bool) error {
	return c.ListManagedSchemaArnsPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListManagedSchemaArnsPagesWithContext same as ListManagedSchemaArnsPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListManagedSchemaArnsPagesWithContext(ctx aws.Context, input *ListManagedSchemaArnsInput, fn func(*ListManagedSchemaArnsOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListManagedSchemaArnsInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListManagedSchemaArnsRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListManagedSchemaArnsOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListObjectAttributes = "ListObjectAttributes"

// ListObjectAttributesRequest generates a "aws/request.Request" representing the
// client's request for the ListObjectAttributes operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListObjectAttributes for more information on using the ListObjectAttributes
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListObjectAttributesRequest method.
//    req, resp := client.ListObjectAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListObjectAttributes
func (c *CloudDirectory) ListObjectAttributesRequest(input *ListObjectAttributesInput) (req *request.Request, output *ListObjectAttributesOutput) {
	op := &request.Operation{
		Name:       opListObjectAttributes,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/attributes",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListObjectAttributesInput{}
	}

	output = &ListObjectAttributesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListObjectAttributes API operation for Amazon CloudDirectory.
//
// Lists all attributes that are associated with an object.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListObjectAttributes for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
//   * ErrCodeFacetValidationException "FacetValidationException"
//   The Facet that you provided was not well formed or could not be validated
//   with the schema.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListObjectAttributes
func (c *CloudDirectory) ListObjectAttributes(input *ListObjectAttributesInput) (*ListObjectAttributesOutput, error) {
	req, out := c.ListObjectAttributesRequest(input)
	return out, req.Send()
}

// ListObjectAttributesWithContext is the same as ListObjectAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ListObjectAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListObjectAttributesWithContext(ctx aws.Context, input *ListObjectAttributesInput, opts ...request.Option) (*ListObjectAttributesOutput, error) {
	req, out := c.ListObjectAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListObjectAttributesPages iterates over the pages of a ListObjectAttributes operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListObjectAttributes method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListObjectAttributes operation.
//    pageNum := 0
//    err := client.ListObjectAttributesPages(params,
//        func(page *clouddirectory.ListObjectAttributesOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListObjectAttributesPages(input *ListObjectAttributesInput, fn func(*ListObjectAttributesOutput, bool) bool) error {
	return c.ListObjectAttributesPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListObjectAttributesPagesWithContext same as ListObjectAttributesPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListObjectAttributesPagesWithContext(ctx aws.Context, input *ListObjectAttributesInput, fn func(*ListObjectAttributesOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListObjectAttributesInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListObjectAttributesRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListObjectAttributesOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListObjectChildren = "ListObjectChildren"

// ListObjectChildrenRequest generates a "aws/request.Request" representing the
// client's request for the ListObjectChildren operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListObjectChildren for more information on using the ListObjectChildren
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListObjectChildrenRequest method.
//    req, resp := client.ListObjectChildrenRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListObjectChildren
func (c *CloudDirectory) ListObjectChildrenRequest(input *ListObjectChildrenInput) (req *request.Request, output *ListObjectChildrenOutput) {
	op := &request.Operation{
		Name:       opListObjectChildren,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/children",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListObjectChildrenInput{}
	}

	output = &ListObjectChildrenOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListObjectChildren API operation for Amazon CloudDirectory.
//
// Returns a paginated list of child objects that are associated with a given
// object.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListObjectChildren for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
//   * ErrCodeNotNodeException "NotNodeException"
//   Occurs when any invalid operations are performed on an object that is not
//   a node, such as calling ListObjectChildren for a leaf node object.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListObjectChildren
func (c *CloudDirectory) ListObjectChildren(input *ListObjectChildrenInput) (*ListObjectChildrenOutput, error) {
	req, out := c.ListObjectChildrenRequest(input)
	return out, req.Send()
}

// ListObjectChildrenWithContext is the same as ListObjectChildren with the addition of
// the ability to pass a context and additional request options.
//
// See ListObjectChildren for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListObjectChildrenWithContext(ctx aws.Context, input *ListObjectChildrenInput, opts ...request.Option) (*ListObjectChildrenOutput, error) {
	req, out := c.ListObjectChildrenRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListObjectChildrenPages iterates over the pages of a ListObjectChildren operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListObjectChildren method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListObjectChildren operation.
//    pageNum := 0
//    err := client.ListObjectChildrenPages(params,
//        func(page *clouddirectory.ListObjectChildrenOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListObjectChildrenPages(input *ListObjectChildrenInput, fn func(*ListObjectChildrenOutput, bool) bool) error {
	return c.ListObjectChildrenPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListObjectChildrenPagesWithContext same as ListObjectChildrenPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListObjectChildrenPagesWithContext(ctx aws.Context, input *ListObjectChildrenInput, fn func(*ListObjectChildrenOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListObjectChildrenInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListObjectChildrenRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListObjectChildrenOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListObjectParentPaths = "ListObjectParentPaths"

// ListObjectParentPathsRequest generates a "aws/request.Request" representing the
// client's request for the ListObjectParentPaths operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListObjectParentPaths for more information on using the ListObjectParentPaths
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListObjectParentPathsRequest method.
//    req, resp := client.ListObjectParentPathsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListObjectParentPaths
func (c *CloudDirectory) ListObjectParentPathsRequest(input *ListObjectParentPathsInput) (req *request.Request, output *ListObjectParentPathsOutput) {
	op := &request.Operation{
		Name:       opListObjectParentPaths,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/parentpaths",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListObjectParentPathsInput{}
	}

	output = &ListObjectParentPathsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListObjectParentPaths API operation for Amazon CloudDirectory.
//
// Retrieves all available parent paths for any object type such as node, leaf
// node, policy node, and index node objects. For more information about objects,
// see Directory Structure (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/key_concepts_directorystructure.html).
//
// Use this API to evaluate all parents for an object. The call returns all
// objects from the root of the directory up to the requested object. The API
// returns the number of paths based on user-defined MaxResults, in case there
// are multiple paths to the parent. The order of the paths and nodes returned
// is consistent among multiple API calls unless the objects are deleted or
// moved. Paths not leading to the directory root are ignored from the target
// object.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListObjectParentPaths for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * ErrCodeLimitExceededException "LimitExceededException"
//   Indicates that limits are exceeded. See Limits (https://docs.aws.amazon.com/clouddirectory/latest/developerguide/limits.html)
//   for more information.
//
//   * ErrCodeAccessDeniedException "AccessDeniedException"
//   Access denied. Check your permissions.
//
//   * ErrCodeDirectoryNotEnabledException "DirectoryNotEnabledException"
//   Operations are only permitted on enabled directories.
//
//   * ErrCodeInvalidNextTokenException "InvalidNextTokenException"
//   Indicates that the NextToken value is not valid.
//
//   * ErrCodeResourceNotFoundException "ResourceNotFoundException"
//   The specified resource could not be found.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListObjectParentPaths
func (c *CloudDirectory) ListObjectParentPaths(input *ListObjectParentPathsInput) (*ListObjectParentPathsOutput, error) {
	req, out := c.ListObjectParentPathsRequest(input)
	return out, req.Send()
}

// ListObjectParentPathsWithContext is the same as ListObjectParentPaths with the addition of
// the ability to pass a context and additional request options.
//
// See ListObjectParentPaths for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListObjectParentPathsWithContext(ctx aws.Context, input *ListObjectParentPathsInput, opts ...request.Option) (*ListObjectParentPathsOutput, error) {
	req, out := c.ListObjectParentPathsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListObjectParentPathsPages iterates over the pages of a ListObjectParentPaths operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListObjectParentPaths method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListObjectParentPaths operation.
//    pageNum := 0
//    err := client.ListObjectParentPathsPages(params,
//        func(page *clouddirectory.ListObjectParentPathsOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *CloudDirectory) ListObjectParentPathsPages(input *ListObjectParentPathsInput, fn func(*ListObjectParentPathsOutput, bool) bool) error {
	return c.ListObjectParentPathsPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListObjectParentPathsPagesWithContext same as ListObjectParentPathsPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CloudDirectory) ListObjectParentPathsPagesWithContext(ctx aws.Context, input *ListObjectParentPathsInput, fn func(*ListObjectParentPathsOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListObjectParentPathsInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListObjectParentPathsRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	cont := true
	for p.Next() && cont {
		cont = fn(p.Page().(*ListObjectParentPathsOutput), !p.HasNextPage())
	}
	return p.Err()
}

const opListObjectParents = "ListObjectParents"

// ListObjectParentsRequest generates a "aws/request.Request" representing the
// client's request for the ListObjectParents operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListObjectParents for more information on using the ListObjectParents
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListObjectParentsRequest method.
//    req, resp := client.ListObjectParentsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/clouddirectory-2017-01-11/ListObjectParents
func (c *CloudDirectory) ListObjectParentsRequest(input *ListObjectParentsInput) (req *request.Request, output *ListObjectParentsOutput) {
	op := &request.Operation{
		Name:       opListObjectParents,
		HTTPMethod: "POST",
		HTTPPath:   "/amazonclouddirectory/2017-01-11/object/parent",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "MaxResults",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListObjectParentsInput{}
	}

	output = &ListObjectParentsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListObjectParents API operation for Amazon CloudDirectory.
//
// Lists parent objects that are associated with a given object in pagination
// fashion.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for Amazon CloudDirectory's
// API operation ListObjectParents for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInternalServiceException "InternalServiceException"
//   Indicates a problem that must be resolved by Amazon Web Services. This might
//   be a transient error in which case you can retry your request until it succeeds.
//   Otherwise, go to the AWS Service Health Dashboard (http://status.aws.amazon.com/)
//   site to see if there are any operational issues with the service.
//
//   * ErrCodeInvalidArnException "InvalidArnException"
//   Indicates that the provided ARN value is not valid.
//
//   * ErrCodeRetryableConflictException "RetryableConflictException"
//   Occurs when a conflict with a previous successful write is detected. For
//   example, if a write operation occurs on an object and then an attempt is
//   made to read the object using “SERIALIZABLE” consistency, this exception
//   may result. This generally occurs when the previous write did not have time
//   to propagate to the host serving the current request. A retry (with appropriate
//   backoff logic) is the recommended response to this exception.
//
//   * ErrCodeValidationException "ValidationException"
//   Indicates that your request is malformed in some manner. See the exception
//   message.
//
//   * Er